# Generated by Django 5.1.7 on 2025-07-06 18:38

from django.db import migrations, models


def migrate_fornecedor_data(apps, schema_editor):
    """Migra dados do campo fornecedor único para o campo fornecedores ManyToMany"""
    Produto = apps.get_model('gearvault', 'Produto')
    
    for produto in Produto.objects.all():
        if hasattr(produto, 'fornecedor') and produto.fornecedor:
            produto.fornecedores.add(produto.fornecedor)


def reverse_migrate_fornecedor_data(apps, schema_editor):
    """Operação reversa - seleciona o primeiro fornecedor como fornecedor único"""
    Produto = apps.get_model('gearvault', 'Produto')
    
    for produto in Produto.objects.all():
        primeiro_fornecedor = produto.fornecedores.first()
        if primeiro_fornecedor:
            produto.fornecedor = primeiro_fornecedor
            produto.save()


class Migration(migrations.Migration):

    dependencies = [
        ('gearvault', '0008_solicitacaoproduto'),
    ]

    operations = [
        # Primeiro, adiciona o campo ManyToMany
        migrations.AddField(
            model_name='produto',
            name='fornecedores',
            field=models.ManyToManyField(blank=True, related_name='produtos', to='gearvault.fornecedor'),
        ),
        # Migra os dados do campo fornecedor para fornecedores
        migrations.RunPython(migrate_fornecedor_data, reverse_migrate_fornecedor_data),
        # Remove o campo antigo
        migrations.RemoveField(
            model_name='produto',
            name='fornecedor',
        ),
        migrations.RemoveField(
            model_name='produto',
            name='preco',
        ),
    ]
